
Step 1 : add dependency in project gradle 

compile 'com.google.android.gms:play-services-location:10.2.6'   // than sync

Step 2 : Add permission to Manifest.xml file 

<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

Step 3 : implements the following interface

implements GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener, LocationListener 

Step 4 : declear the following variable 

private GoogleApiClient mGoogleApiClient;
private LocationRequest mLocationRequest;
private double mLatitude, mLongitude;


Step 4 : create object of GoogleApiClient in onCreate method

mGoogleApiClient = new GoogleApiClient.Builder(this)
                .addApi(LocationServices.API).addConnectionCallbacks(this)
                .addOnConnectionFailedListener(this).build();
				
Step 5 :  connect & disconnect 

@Override
protected void onStart() {
	super.onStart();
	mGoogleApiClient.connect();
}

@Override
protected void onPause() {
	super.onPause();
	mGoogleApiClient.disconnect();
}	

Step 6 :  take longiture & Latutude for onConnected methord (here we get Toast nitification only)

@Override
public void onConnected(@Nullable Bundle bundle) {

	mLocationRequest = LocationRequest.create()
			.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)
			.setInterval(1000);


	if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
		ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.ACCESS_FINE_LOCATION},1);
		return;
	}
	LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this);
	if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
		return;
	}
	Location myLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);

	if (myLocation != null) {
		mLatitude = myLocation.getLatitude();
		mLongitude = myLocation.getLongitude();
		Toast.makeText(this, "Location : " + "Lat : "+ mLatitude + "Log : "+ mLongitude, Toast.LENGTH_SHORT).show();
	} else {
		// do something is failled;
	}

}


	
Step 7 :  Other methord onConnectionSuspended,  onConnectionFailed & onLocationChanged can be use when ever necessary 

@Override
public void onConnectionSuspended(int i) {

}

@Override
public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {

}

@Override
public void onLocationChanged(Location location) {

}
	
